#include <vb/Hypermap_lib.h>

namespace vb {
	Hypermap H_T () {
		return Hypermap (   {{0,1},{2,3},{4,5}},
							{{0,2},{3,4},{1,5}},
							{{0,3,5},{1,4,2}} ); }

	Hypermap H_TT () {
		return Hypermap (   {{0,1},{2,3},{4,5}, {6,7},{8,9},{10,11}},
							{{0,2},{3,4},{1,5}, {6,8},{9,10},{7,11}},
							{{0,3,5},{1,4,2},   {6,9,11}, {7,10,8}} ); }

	Hypermap H_TL () {
		return Hypermap (	{{0,1,2,3,4,5}},
		                 	{{0,3},{1,4},{2,5}},
		                 	{{0,2,4},{1,3,5}} ); }

	Hypermap H_TL2 () {
		return Hypermap (	{{0,1,2,3,4,5},{6,7}},
		                 	{{0,6},{1,4},{2,5},{3,7}},
		                 	{{0,7,2,4},{1,3,6,5}} ); }

	Hypermap H_TL3 () {
		return Hypermap (	{{0,6,9,5,2,1,7,8,4,3},{10,11}},
		                 	{{0,1},{2,3},{4,6},{5,7},{8,10},{9,11}},
		                 	{{0,2,4},{1,3,5},{6,8,11},{7,9,10}} ); }

	Hypermap H_H1 () {
		return Hypermap (   {{0,1,2}, {3,4}, {5}, {6,7,8}},
							{{0,3}, {1,8,2}, {4,5,6}, {7}},
							{{0,4,8}, {1}, {2,7,6,5,3}} ); }

	Hypermap H_H2 () {
		return Hypermap (   {{0,1,2,3,4,5,6,7}, {11,10,9,8}},
							{{0,4}, {1,11}, {2,6}, {3,10}, {5,9}, {7,8}},
							{{0,3,11}, {1,8,6}, {2,5,10}, {4,7,9}} ); }

	Hypermap H_H67 () {
		return Hypermap (   {{0,1,2,3,4,5,6,7,8,9}, {10,11,12,13,14}, {15,16,17}},
							{{0,5}, {1,14}, {2,17}, {3,7}, {4,10}, {6,11}, {8,16}, {9,12}, {13,15}},
							{{0,4,14}, {1,13,17}, {2,16,7}, {3,6,10}, {5,9,11}, {8,15,12}} ); }

	Hypermap H_H3 () {
		return Hypermap (   {{0,1,2},{3,4},{5,6,7,8},{9,10},{11,12,13}},
							{{0,13},{1,6},{2,3},{4,5},{7,12},{8,9},{10,11}},
							{{0,12,6},{1,5,3},{2,4,8,10,13},{7,11,9}} ); }

	Hypermap H_C5 () {
		return Hypermap (   {{0,29,15,16,6,12,5},{1,2,19,27},{7,25,18,20,8},{9,22,28,26,24,17,10,13},{3,4,11,14,23,21}},
							{{0,1},{2,3},{4,5},{6,7},{8,9},{10,11},{12,13},{14,15},{16,17},{18,19},{20,21},{22,23},{24,25},{26,27},{28,29}},
							{{11,17,15},{4,12,10},{6,8,13},{20,23,9},{1,5,3},{18,2,21},{16,24,7},{19,25,26},{0,27,28},{22,14,29}} ); }

	Hypermap H_SV ()    { return Hypermap ( {{1,2,3,4,5,6,7}, {8,9,10,11,12}, {13,14,15,16,17}, {18,19,20,21,22,23,0}},
											{{0,4}, {1,10}, {2,22}, {3,15}, {5,8}, {6,19}, {7,13}, {9,23}, {11,17}, {12,20}, {14,18}, {16,21}},
											{{0,3,14}, {1,9,22}, {2,21,15}, {4,23,8}, {5,12,19}, {6,18,13}, {7,17,10}, {11,16,20}} ); }

	Hypermap H_B () { return Hypermap ( {{0,1,2,3,4,5,6,7,8,9,10,11}, {12,13,14,15}, {16,17,18,19}, {20,21,22,23}, {24,25,26,27,28,29}},
										{{0,6}, {1,29}, {2,16}, {3,12}, {4,8}, {5,24}, {7,25}, {9,15}, {10,22}, {11,26}, {13,19}, {14,23}, {17,28}, {18,20}, {21,27}},
										{{0,5,29}, {1,28,16}, {2,19,12}, {3,15,8}, {4,7,24}, {6,11,25}, {9,14,22}, {10,21,26}, {13,18,23}, {17,27,20}} ); }

	Hypermap H_E () { return Hypermap ( {{0,1,2,3,4,5}, {6,7,8,9,10,11,12,13}, {14,15,16,17,18,19,20,21}, {22,23}},
										{{0,6}, {1,20}, {2,8}, {3,14}, {4,12}, {5,16}, {7,15}, {9,19}, {10,22}, {11,17}, {13,21}, {18,23}},
										{{0,13,20}, {1,19,8}, {2,7,14}, {3,21,12}, {4,11,16}, {5,15,6}, {9,18,22}, {10,23,17}} ); }

	Hypermap H_KS5 ()   { return Hypermap ( {{0,2}, {1,3,4}},
											{{0,1,3}, {2,4}},
											{{0,1,2,3,4}} ); }

	Hypermap H_KS5T()   { return Hypermap ( {{0,1,2,3}, {4,5,6,7}, {8,9,10,11,12,13}, {14,15,16,17,18,19}, {20,21,22,23,24,25,26,27,28,29}},
											{{0,6}, {1,29}, {2,19}, {3,25}, {4,10}, {5,20}, {7,24}, {8,17}, {9,21}, {11,23}, {12,15}, {13,27}, {14,28}, {16,22}, {18,26}},
											{{0,5,29}, {1,28,19}, {2,18,25}, {3,24,6}, {4,9,20}, {7,23,10}, {8,16,21}, {11,22,15}, {12,14,27}, {13,26,17}} ); }

	Hypermap H_artem (int n) {
		std::vector<unsigned> sigma(6*n), alpha(6*n), phi(6*n);
		for (int i=0; i<n; ++i) {
			sigma[i]=2*n+i; sigma[n+i]=5*n+i+1; sigma[2*n+i]=n+i-1; sigma[3*n+i]=3*n+i+1; sigma[4*n+i]=4*n+i-1; sigma[5*n+i]=i;
			alpha[i]=n+i; alpha[n+i]=i; alpha[2*n+i]=3*n+i; alpha[3*n+i]=2*n+i; alpha[4*n+i]=5*n+i; alpha[5*n+i]=4*n+i;
			phi[i]=2*n+i+1; phi[n+i]=5*n+i; phi[2*n+i]=3*n+i-1; phi[3*n+i]=i; phi[4*n+i]=n+i-1; phi[5*n+i]=4*n+i+1;
		}
		sigma[2*n-1]=3*n; sigma[2*n]=5*n-1; sigma[4*n-1]=5*n; sigma[4*n]=2*n-1;
		phi[n-1]=4*n; phi[2*n]=2*n-1; phi[3*n]=0; phi[4*n]=4*n-1; phi[6*n-1]=2*n;
		return Hypermap (sigma, alpha, phi);
	}
}
